<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Output\2_5KW_PFC.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Output\2_5KW_PFC.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed May 06 10:11:35 2020
<BR><P>
<H3>Maximum Stack Usage =        324 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
_printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2f]">PWM0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">PWM0_IRQHandler</a><BR>
 <LI><a href="#[62]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[62]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19]">ADC0_IRQHandler</a> from isr.o(i.ADC0_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[23]">ADC10_IRQHandler</a> from isr.o(i.ADC10_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[24]">ADC11_IRQHandler</a> from isr.o(i.ADC11_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[25]">ADC12_IRQHandler</a> from isr.o(i.ADC12_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[26]">ADC13_IRQHandler</a> from isr.o(i.ADC13_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[27]">ADC14_IRQHandler</a> from isr.o(i.ADC14_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[28]">ADC15_IRQHandler</a> from isr.o(i.ADC15_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[1a]">ADC1_IRQHandler</a> from adcfunction.o(i.ADC1_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[1b]">ADC2_IRQHandler</a> from isr.o(i.ADC2_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[1c]">ADC3_IRQHandler</a> from isr.o(i.ADC3_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[1d]">ADC4_IRQHandler</a> from isr.o(i.ADC4_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[1e]">ADC5_IRQHandler</a> from adcfunction.o(i.ADC5_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[1f]">ADC6_IRQHandler</a> from isr.o(i.ADC6_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[20]">ADC7_IRQHandler</a> from isr.o(i.ADC7_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[21]">ADC8_IRQHandler</a> from isr.o(i.ADC8_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[22]">ADC9_IRQHandler</a> from isr.o(i.ADC9_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[29]">ADCPPU0_IRQHandler</a> from isr.o(i.ADCPPU0_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[2a]">ADCPPU1_IRQHandler</a> from isr.o(i.ADCPPU1_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[2b]">ADCPPU2_IRQHandler</a> from isr.o(i.ADCPPU2_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[2c]">ADCPPU3_IRQHandler</a> from isr.o(i.ADCPPU3_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[2d]">ADCPPU4_IRQHandler</a> from isr.o(i.ADCPPU4_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[2e]">ADCPPU5_IRQHandler</a> from isr.o(i.ADCPPU5_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[40]">AES_IRQHandler</a> from isr.o(i.AES_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from isr.o(i.BusFault_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[10]">CLOCK_IRQHandler</a> from isr.o(i.CLOCK_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[3f]">CRC_IRQHandler</a> from isr.o(i.CRC_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from isr.o(i.DebugMon_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[3b]">ECAP_IRQHandler</a> from isr.o(i.ECAP_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[13]">GPIO_EDGE_IRQHandler</a> from isr.o(i.GPIO_EDGE_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[12]">GPIO_LEVEL_IRQHandler</a> from isr.o(i.GPIO_LEVEL_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from isr.o(i.HardFault_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[18]">I2C_IRQHandler</a> from isr.o(i.I2C_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[e]">MEM_IRQHandler</a> from isr.o(i.MEM_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from isr.o(i.MemManage_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from isr.o(i.NMI_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[f]">POWER_IRQHandler</a> from isr.o(i.POWER_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[35]">PWM0TZ_IRQHandler</a> from isr.o(i.PWM0TZ_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[2f]">PWM0_IRQHandler</a> from startup_spc1168.o(.text) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[36]">PWM1TZ_IRQHandler</a> from isr.o(i.PWM1TZ_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[30]">PWM1_IRQHandler</a> from chargefunction.o(i.PWM1_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[37]">PWM2TZ_IRQHandler</a> from isr.o(i.PWM2TZ_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[31]">PWM2_IRQHandler</a> from isr.o(i.PWM2_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[38]">PWM3TZ_IRQHandler</a> from isr.o(i.PWM3TZ_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[32]">PWM3_IRQHandler</a> from isr.o(i.PWM3_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[39]">PWM4TZ_IRQHandler</a> from isr.o(i.PWM4TZ_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[33]">PWM4_IRQHandler</a> from isr.o(i.PWM4_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[3a]">PWM5TZ_IRQHandler</a> from isr.o(i.PWM5TZ_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[34]">PWM5_IRQHandler</a> from isr.o(i.PWM5_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from isr.o(i.PendSV_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_spc1168.o(.text) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[14]">SIO0A_IRQHandler</a> from isr.o(i.SIO0A_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[15]">SIO0B_IRQHandler</a> from isr.o(i.SIO0B_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[17]">SSP_IRQHandler</a> from isr.o(i.SSP_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from isr.o(i.SVC_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from isr.o(i.SysTick_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[41]">SystemInit</a> from system_spc1168.o(i.SystemInit) referenced from startup_spc1168.o(.text)
 <LI><a href="#[3c]">TIMER0_IRQHandler</a> from adcfunction.o(i.TIMER0_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[3d]">TIMER1_IRQHandler</a> from systemconfig.o(i.TIMER1_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[3e]">TIMER2_IRQHandler</a> from adcfunction.o(i.TIMER2_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[16]">UART_IRQHandler</a> from isr.o(i.UART_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from isr.o(i.UsageFault_Handler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[11]">WDT1_IRQHandler</a> from systemconfig.o(i.WDT1_IRQHandler) referenced from startup_spc1168.o(RESET)
 <LI><a href="#[45]">__main</a> from __main.o(!!!main) referenced from startup_spc1168.o(.text)
 <LI><a href="#[44]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[43]">fputc</a> from retarget.o(i.fputc) referenced from _printf_char_file.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[45]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[46]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[48]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[b5]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b6]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[49]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[4a]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[6b]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[4c]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[4e]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[50]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[b8]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[5b]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[52]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[b9]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[54]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[ba]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[be]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[56]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[c0]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[c8]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[c9]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[ca]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[cb]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[60]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[cd]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[ce]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[cf]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[d0]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[d1]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[d2]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[d3]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[47]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[d4]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[58]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5a]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[d5]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5c]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ChargeProtect &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[d6]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[7d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5f]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[d7]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[61]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, startup_spc1168.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_spc1168.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_spc1168.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetTiming
</UL>

<P><STRONG><a name="[d8]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeProtect
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART_Command_Special
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART_Command_Comm
</UL>

<P><STRONG><a name="[66]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[67]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[65]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[4d]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[4f]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[d9]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__printf</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, __printf_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetVal
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultResetVal
</UL>

<P><STRONG><a name="[6c]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[da]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetVal
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultResetVal
</UL>

<P><STRONG><a name="[db]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[dd]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[e0]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[77]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[51]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[78]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[64]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[55]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[73]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[79]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[76]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[6f]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e1]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e2]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5e]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ae]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[70]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7f]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[7e]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[80]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[81]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[71]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[72]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[82]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[19]"></a>ADC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC10_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ADC11_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC11_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ADC12_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC12_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ADC13_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC13_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ADC14_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC14_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>ADC15_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC1_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, adcfunction.o(i.ADC1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcfunction.o(i.ADC5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC6_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC8_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC8_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC9_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC9_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>ADCPPU0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADCPPU0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ADCPPU1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADCPPU1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ADCPPU2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADCPPU2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADCPPU3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADCPPU3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>ADCPPU4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADCPPU4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>ADCPPU5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADCPPU5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>ADC_Config</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, adcfunction.o(i.ADC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ADC_Config &rArr; ADC_EasyInit1 &rArr; ADC_SetGainAndOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_EasyInit1
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>ADC_EasyInit1</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, adc.o(i.ADC_EasyInit1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_EasyInit1 &rArr; ADC_SetGainAndOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinAsAnalog
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetSampleAndConvertTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetGainAndOffset
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SelectPinSingleEnded
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PowerUp
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>

<P><STRONG><a name="[8b]"></a>ADC_GetInputPinCode</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, adc.o(i.ADC_GetInputPinCode))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SelectPinSingleEnded
</UL>

<P><STRONG><a name="[85]"></a>ADC_PowerUp</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, adc.o(i.ADC_PowerUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_PowerUp
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_EasyInit1
</UL>

<P><STRONG><a name="[86]"></a>ADC_SelectPinSingleEnded</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, adc.o(i.ADC_SelectPinSingleEnded))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_SelectPinSingleEnded
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetInputPinCode
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_EasyInit1
</UL>

<P><STRONG><a name="[88]"></a>ADC_SetGainAndOffset</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, adc.o(i.ADC_SetGainAndOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_SetGainAndOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_EasyInit1
</UL>

<P><STRONG><a name="[87]"></a>ADC_SetSampleAndConvertTime</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, adc.o(i.ADC_SetSampleAndConvertTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_SetSampleAndConvertTime &rArr; CLOCK_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_EasyInit1
</UL>

<P><STRONG><a name="[40]"></a>AES_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.AES_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>CLOCK_ConfigurePLLWithRCO</STRONG> (Thumb, 232 bytes, Stack size 0 bytes, clock.o(i.CLOCK_ConfigurePLLWithRCO))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitWithRCO
</UL>

<P><STRONG><a name="[8a]"></a>CLOCK_EnableModule</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, clock.o(i.CLOCK_EnableModule))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_PowerUp
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Init
</UL>

<P><STRONG><a name="[8c]"></a>CLOCK_GetModuleClock</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, clock.o(i.CLOCK_GetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CLOCK_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetModuleDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetSampleAndConvertTime
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Init
</UL>

<P><STRONG><a name="[8d]"></a>CLOCK_GetModuleDiv</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, clock.o(i.CLOCK_GetModuleDiv))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetModuleClock
</UL>

<P><STRONG><a name="[10]"></a>CLOCK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.CLOCK_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>CLOCK_InitWithRCO</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, clock.o(i.CLOCK_InitWithRCO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_InitWithRCO
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_ConfigurePLLWithRCO
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
</UL>

<P><STRONG><a name="[a8]"></a>CLOCK_SetModuleDiv</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, clock.o(i.CLOCK_SetModuleDiv))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
</UL>

<P><STRONG><a name="[3f]"></a>CRC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.CRC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>ChargeProtect</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, chargefunction.o(i.ChargeProtect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = ChargeProtect &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultResetVal
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>Delay_Init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, delay.o(i.Delay_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
</UL>

<P><STRONG><a name="[3b]"></a>ECAP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ECAP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>FLASH_SetTiming</STRONG> (Thumb, 374 bytes, Stack size 40 bytes, flash.o(i.FLASH_SetTiming))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FLASH_SetTiming &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
</UL>

<P><STRONG><a name="[94]"></a>FSM_Handle</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, fsm.o(i.FSM_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FSM_Handle &rArr; ResetVal &rArr; Parameter_Loading &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetVal
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultResetVal
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>FaultResetVal</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, chargefunction.o(i.FaultResetVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FaultResetVal &rArr; Parameter_Loading &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_Loading
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM_Handle
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeProtect
</UL>

<P><STRONG><a name="[13]"></a>GPIO_EDGE_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO_EDGE_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIO_LEVEL_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO_LEVEL_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>GPIO_SetPinAsAnalog</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gpio.o(i.GPIO_SetPinAsAnalog))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_EasyInit1
</UL>

<P><STRONG><a name="[a2]"></a>GPIO_SetPinAsGPIO</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.GPIO_SetPinAsGPIO))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetTZ1FromGPIO
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetTZ0FromGPIO
</UL>

<P><STRONG><a name="[a3]"></a>GPIO_SetPinDir</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gpio.o(i.GPIO_SetPinDir))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetTZ1FromGPIO
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetTZ0FromGPIO
</UL>

<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.I2C_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>MEM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.MEM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>MeasureVoltage</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, adcfunction.o(i.MeasureVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>MotorDebug_UART</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, uart_debug.o(i.MotorDebug_UART))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = MotorDebug_UART &rArr; MotorDebug_UART_Command_Special &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART_Command_Special
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART_Command_Comm
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>MotorDebug_UART_Command_Comm</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, uart_debug.o(i.MotorDebug_UART_Command_Comm))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = MotorDebug_UART_Command_Comm &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART
</UL>

<P><STRONG><a name="[9b]"></a>MotorDebug_UART_Command_Special</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, uart_debug.o(i.MotorDebug_UART_Command_Special))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = MotorDebug_UART_Command_Special &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART
</UL>

<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>POWER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.POWER_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PWM0TZ_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM0TZ_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PWM1TZ_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM1TZ_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>PWM1_IRQHandler</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, chargefunction.o(i.PWM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PWM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMcal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>PWM2TZ_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM2TZ_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>PWM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>PWM3TZ_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM3TZ_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PWM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>PWM4TZ_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM4TZ_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PWM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>PWM5TZ_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM5TZ_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>PWM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PWM5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>PWM_Config</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, systemconfig.o(i.PWM_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PWM_Config &rArr; PWM_Init &rArr; CLOCK_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetTZ1FromGPIO
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetTZ0FromGPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>PWM_SetTZ0FromGPIO</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, pwm.o(i.PWM_SetTZ0FromGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PWM_SetTZ0FromGPIO
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinAsGPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Config
</UL>

<P><STRONG><a name="[a1]"></a>PWM_SetTZ1FromGPIO</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, pwm.o(i.PWM_SetTZ1FromGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PWM_SetTZ1FromGPIO
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinAsGPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Config
</UL>

<P><STRONG><a name="[9d]"></a>PWMcal</STRONG> (Thumb, 388 bytes, Stack size 0 bytes, chargefunction.o(i.PWMcal))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM1_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>Parameter_Loading</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, chargefunction.o(i.Parameter_Loading))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Parameter_Loading &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetVal
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultResetVal
</UL>

<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>ResetVal</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, chargefunction.o(i.ResetVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ResetVal &rArr; Parameter_Loading &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_Loading
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM_Handle
</UL>

<P><STRONG><a name="[14]"></a>SIO0A_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SIO0A_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SIO0B_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SIO0B_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SSP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SSP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>Sys_Config</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, systemconfig.o(i.Sys_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = Sys_Config &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinAsGPIO
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetTiming
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetModuleDiv
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_InitWithRCO
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableModule
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_spc1168.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, adcfunction.o(i.TIMER0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, systemconfig.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeasureVoltage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>TIMER1_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, systemconfig.o(i.TIMER1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIMER1_Init &rArr; CLOCK_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetModuleClock
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
</UL>

<P><STRONG><a name="[3e]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcfunction.o(i.TIMER2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.UART_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>UART_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_Init &rArr; CLOCK_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetModuleClock
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
</UL>

<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>WDT1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systemconfig.o(i.WDT1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_spc1168.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>WDT_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, wdt.o(i.WDT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WDT_Init &rArr; CLOCK_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetModuleClock
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
</UL>

<P><STRONG><a name="[75]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[6a]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[62]"></a>_sys_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(i._sys_exit))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[7a]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(i.ferror))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[43]"></a>fputc</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, retarget.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>main</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = main &rArr; ChargeProtect &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM_Handle
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_Loading
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeProtect
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[57]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_Loading
</UL>

<P><STRONG><a name="[af]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_Loading
</UL>

<P><STRONG><a name="[e3]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[a5]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_Loading
</UL>

<P><STRONG><a name="[b1]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[b0]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
</UL>

<P><STRONG><a name="[b2]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART_Command_Special
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorDebug_UART_Command_Comm
</UL>

<P><STRONG><a name="[b3]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[b4]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[53]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[e4]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[e5]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[4b]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9f]"></a>PWM_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, systemconfig.o(i.PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PWM_Init &rArr; CLOCK_GetModuleClock
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetModuleClock
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Config
</UL>

<P><STRONG><a name="[6e]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[44]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
